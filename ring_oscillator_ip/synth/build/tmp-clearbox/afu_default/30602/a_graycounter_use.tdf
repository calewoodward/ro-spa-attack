--a_graycounter CBX_SINGLE_OUTPUT_FILE="OFF" DEVICE_FAMILY="Arria 10" PVALUE=1 WIDTH=6 aclr clock cnt_en q ALTERA_INTERNAL_OPTIONS=suppress_da_rule_internal=S102
--VERSION_BEGIN 19.2 cbx_a_gray2bin 2019:06:24:17:05:51:SJ cbx_a_graycounter 2019:06:24:17:05:51:SJ cbx_mgl 2019:06:24:18:19:52:SJ cbx_stratix 2019:06:24:17:05:52:SJ cbx_stratixii 2019:06:24:17:05:52:SJ  VERSION_END


-- Copyright (C) 2019  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = reg 7 
OPTIONS ALTERA_INTERNAL_OPTION = "suppress_da_rule_internal=S102;{-to counter3a0} POWER_UP_LEVEL=HIGH;{-to parity4} POWER_UP_LEVEL=LOW";

SUBDESIGN a_graycounter_use
( 
	aclr	:	input;
	clock	:	input;
	cnt_en	:	input;
	q[5..0]	:	output;
) 
VARIABLE 
	counter3a0 : dffeas
		WITH (
			power_up = "high"
		);
	counter3a1 : dffeas;
	counter3a2 : dffeas;
	counter3a3 : dffeas;
	counter3a4 : dffeas;
	counter3a5 : dffeas;
	parity4 : dffeas
		WITH (
			power_up = "low"
		);
	cntr_cout[5..0]	: WIRE;
	parity_cout	: WIRE;
	sclr	: NODE;
	updown	: NODE;

BEGIN 
	counter3a[5..0].clk = clock;
	counter3a[5..1].clrn = (! aclr);
	counter3a[5..0].d = ( (counter3a[5].q $ cntr_cout[4..4]), (counter3a[4].q $ (counter3a[3].q & cntr_cout[3..3])), (counter3a[3].q $ (counter3a[2].q & cntr_cout[2..2])), (counter3a[2].q $ (counter3a[1].q & cntr_cout[1..1])), (counter3a[1].q $ (counter3a[0].q & cntr_cout[0..0])), ((cnt_en & (counter3a[0].q $ (! parity_cout))) # ((! cnt_en) & counter3a[0].q)));
	counter3a[0].prn = (! aclr);
	counter3a[5..0].sclr = sclr;
	parity4.clk = clock;
	parity4.clrn = (! aclr);
	parity4.d = ((cnt_en & (((((counter3a[0..0].q $ counter3a[1..1].q) $ counter3a[2..2].q) $ counter3a[3..3].q) $ counter3a[4..4].q) $ counter3a[5..5].q)) # ((! cnt_en) & parity4.q));
	parity4.sclr = sclr;
	cntr_cout[] = ( B"0", (cntr_cout[3..3] & (! counter3a[3].q)), (cntr_cout[2..2] & (! counter3a[2].q)), (cntr_cout[1..1] & (! counter3a[1].q)), (cntr_cout[0..0] & (! counter3a[0].q)), (cnt_en & parity_cout));
	parity_cout = ((parity4.q $ updown) & cnt_en);
	q[] = counter3a[5..0].q;
	sclr = GND;
	updown = VCC;
END;
--VALID FILE
